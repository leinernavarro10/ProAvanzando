function checkFile(e){function r(e,r){for(var a=r;a;a=a.prev)if(e in a.vars)return!0}function a(e,a){"Identifier"!=e.type||e.name in s||r(e.name,a)||(s[e.name]=!0,fail("Assignment to global variable",e.loc))}var n,t=fs.readFileSync(e,"utf8");if(n=t.match(/[\x00-\x08\x0b\x0c\x0e-\x19\uFEFF\t]|[ \t]\n/)){fail(("\t"==n[0]?"Found tab character":n[0].indexOf("\n")>-1?"Trailing whitespace":"Undesirable character "+n[0].charCodeAt(0))+" at line "+(v=acorn.getLineInfo(t,n.index)).line+", column "+v.column,{source:e})}var i=Object.create(null);try{var o=acorn.parse(t,{locations:!0,ecmaVersion:3,strictSemicolons:!0,allowTrailingCommas:!1,forbidReserved:!0,sourceFile:e})}catch(r){return void fail(r.message,{source:e})}var c=[];walk.simple(o,{ScopeBody:function(e,r){e.scope=r,c.push(r)}},walk.scopeVisitor,{vars:Object.create(null)});var s=Object.create(null);if(walk.simple(o,{UpdateExpression:function(e,r){a(e.argument,r)},AssignmentExpression:function(e,r){a(e.left,r)},Identifier:function(e,r){if("arguments"!=e.name){for(var a=r;a;a=a.prev)if(e.name in a.vars)return void(a.vars[e.name].used=!0);i[e.name]=e.loc}},FunctionExpression:function(e){e.id&&fail("Named function expression",e.loc)}},scopePasser),!i.exports){var l,f=Object.create(topAllowedGlobals);(l=t.match(/\/\/ declare global:\s+(.*)/))&&l[1].split(/,\s*/g).forEach(function(e){f[e]=!0});for(var u in i)u in f||fail("Access to global variable "+u+". Add a '// declare global: "+u+"' comment or add this variable in test/lint/lint.js.",i[u])}for(var d=0;d<c.length;++d){var p=c[d];for(var m in p.vars){var v=p.vars[m];v.used||"catch clause"==v.type||"function name"==v.type||"_"==m.charAt(0)||fail("Unused "+v.type+" "+m,v.node.loc)}}}function fail(e,r){r.start&&(e+=" ("+r.start.line+":"+r.start.column+")"),console.log(r.source+": "+e),failed=!0}function checkDir(e){fs.readdirSync(e).forEach(function(r){var a=e+"/"+r;/\.js$/.test(r)?checkFile(a):"dep"!=r&&fs.lstatSync(a).isDirectory()&&checkDir(a)})}var topAllowedGlobals=Object.create(null);"Error RegExp Number String Array Function Object Math Date undefined parseInt parseFloat Infinity NaN isNaN window document navigator prompt alert confirm console FileReader Worker postMessage importScripts setInterval clearInterval setTimeout clearTimeout CodeMirror test".split(" ").forEach(function(e){topAllowedGlobals[e]=!0});var fs=require("fs"),acorn=require("./acorn.js"),walk=require("./walk.js"),scopePasser=walk.make({ScopeBody:function(e,r,a){a(e,e.scope)}}),failed=!1;exports.checkDir=checkDir,exports.checkFile=checkFile,exports.success=function(){return!failed};