!function(e,i,t){var c={checkbox:!1,checkboxChain:!0,checkboxBreak:!0,checkboxClick:!1},h={_checkboxInit:function(){this._instance.jQuery.bind("acitree"+this._private.nameSpace,function(e,i,t,c,h){switch(c){case"loaded":i._checkboxLoad(t)}}).bind("keydown"+this._private.nameSpace,this.proxy(function(e){switch(e.which){case 32:if(this.extSelectable&&this.extSelectable()&&!e.ctrlKey){var i=this.focused();this.hasCheckbox(i)&&this.isEnabled(i)&&(this.isChecked(i)?this.uncheck(i):this.check(i),e.stopImmediatePropagation(),e.preventDefault())}}})).on("click"+this._private.nameSpace,".aciTreeItem",this.proxy(function(i){if(!this._instance.options.checkboxClick||e(i.target).is(".aciTreeCheck")){var t=this.itemFrom(i.target);!this.hasCheckbox(t)||!this.isEnabled(t)||this.extSelectable&&this.extSelectable()&&(i.ctrlKey||i.shiftKey)||(this.isChecked(t)?this.uncheck(t):this.check(t),i.preventDefault())}}))},_initHook:function(){this.extCheckbox()&&this._checkboxInit(),this._super()},_itemHook:function(e,i,t,c){this.extCheckbox()&&(this.extRadio&&this.hasRadio(i)||!t.checkbox&&(void 0!==t.checkbox||this.extRadio&&this.extRadio())||this._checkboxDOM.add(i,t)),this._super(e,i,t,c)},_checkboxDOM:{add:function(e,i){e.attr("aria-checked",!!i.checked).addClass("aciTreeCheckbox"+(i.checked?" aciTreeChecked":"")).children(".aciTreeLine").find(".aciTreeText").wrap("<label></label>").before('<span class="aciTreeCheck" />')},remove:function(e){var i=e.removeAttr("aria-checked").removeClass("aciTreeCheckbox aciTreeChecked aciTreeTristate").children(".aciTreeLine").find("label");i.length&&(i.find("*").not(".aciTreeText").remove(),i.find(".aciTreeText").unwrap())},check:function(e,i){e.attr("aria-checked",i).toggleClass("aciTreeChecked",i)},tristate:function(e,i){e.toggleClass("aciTreeTristate",i)}},_checkboxLoad:function(e){if(!1!==this._instance.options.checkboxChain){var i=void 0;this.hasCheckbox(e)&&(this.isChecked(e)?this.checkboxes(this.children(e,!1,!0),!0).length||(i=!0):i=!1),this._checkboxUpdate(e,i)}},_checkboxChildren:function(i){if(this._instance.options.checkboxBreak){var t=[],c=this.proxy(function(i){this.children(i,!1,!0).each(this.proxy(function(i){var h=e(i);this.hasCheckbox(h)&&(t.push(i),c(h))},!0))});return c(i),e(t)}var h=this.children(i,!0,!0);return this.checkboxes(h)},_checkboxUpdate:function(i,t){var c=this.proxy(function(i,t,h){var s=0,o=0;this.children(i,!1,!0).each(this.proxy(function(i){var t=e(i),a={total:0,checked:0};this.hasCheckbox(t)?(void 0!==h&&-1!==this._instance.options.checkboxChain&&this._checkboxDOM.check(t,h),s++,this.isChecked(t)&&o++,c(t,a,h)):this._instance.options.checkboxBreak?c(t,{total:0,checked:0}):c(t,a,h),s+=a.total,o+=a.checked},!0)),i&&(this._checkboxDOM.tristate(i,o>0&&o!=s),t.total+=s,t.checked+=o)});c(i,{total:0,checked:0},t);var h=this.proxy(function(e,i,t){var c=this.parent(e);if(c.length){if(!i)var s=this._checkboxChildren(c),o=this.checkboxes(s,!0).length,i=o>0&&o!=s.length;this.hasCheckbox(c)?(void 0!==t&&1!==this._instance.options.checkboxChain&&this._checkboxDOM.check(c,!!i||t),this._checkboxDOM.tristate(c,i),h(c,i,t)):this._instance.options.checkboxBreak?h(c):h(c,i,t)}});h(i,void 0,t)},hasCheckbox:function(e){return e&&e.hasClass("aciTreeCheckbox")},addCheckbox:function(e,i){if(i=this._options(i,"checkboxadded","addcheckboxfail","wascheckbox",e),this.isItem(e)){if(!this._trigger(e,"beforeaddcheckbox",i))return void this._fail(e,i);if(this.hasCheckbox(e))this._notify(e,i);else{var t=function(){this._checkboxDOM.add(e,{}),this._success(e,i)};this.extRadio&&this.hasRadio(e)?this.removeRadio(e,this._inner(i,{success:t,fail:i.fail})):t.apply(this)}}else this._fail(e,i)},removeCheckbox:function(e,i){if(i=this._options(i,"checkboxremoved","removecheckboxfail","notcheckbox",e),this.isItem(e)){if(!this._trigger(e,"beforeremovecheckbox",i))return void this._fail(e,i);this.hasCheckbox(e)?(this._checkboxDOM.remove(e),this._success(e,i)):this._notify(e,i)}else this._fail(e,i)},isChecked:function(e){return this.hasCheckbox(e)?e.hasClass("aciTreeChecked"):!!this._super&&this._super(e)},check:function(e,i){if(this.extCheckbox&&this.hasCheckbox(e)){if(i=this._options(i,"checked","checkfail","waschecked",e),!this._trigger(e,"beforecheck",i))return void this._fail(e,i);this.isChecked(e)?this._notify(e,i):(this._checkboxDOM.check(e,!0),!1!==this._instance.options.checkboxChain&&this._checkboxUpdate(e,!0),this._success(e,i))}else this._super?this._super(e,i):(this._trigger(e,"checkfail",i),this._fail(e,i))},uncheck:function(e,i){if(this.extCheckbox&&this.hasCheckbox(e)){if(i=this._options(i,"unchecked","uncheckfail","notchecked",e),!this._trigger(e,"beforeuncheck",i))return void this._fail(e,i);this.isChecked(e)?(this._checkboxDOM.check(e,!1),!1!==this._instance.options.checkboxChain&&this._checkboxUpdate(e,!1),this._success(e,i)):this._notify(e,i)}else this._super?this._super(e,i):(this._trigger(e,"uncheckfail",i),this._fail(e,i))},checkboxes:function(e,i){var t=e.filter(".aciTreeCheckbox");return void 0!==i?i?t.filter(".aciTreeChecked"):t.not(".aciTreeChecked"):t},_serialize:function(e,i){var t=this._super(e,i);return t&&this.extCheckbox()&&(t.hasOwnProperty("checkbox")?(t.checkbox=this.hasCheckbox(e),t.checked=this.isChecked(e)):this.hasCheckbox(e)&&(this.extRadio&&this.extRadio()&&(t.checkbox=!0),t.checked=this.isChecked(e))),t},serialize:function(i,t,c){if("checkbox"==t){var h="",s=this.children(i,!0,!0);return this.checkboxes(s,!0).each(this.proxy(function(i){var s=e(i);h+=c?c.call(this,s,t,this.getId(s)):this._instance.options.serialize.call(this,s,t,this.getId(s))},!0)),h}return this._super(i,t,c)},isTristate:function(e){return e&&e.hasClass("aciTreeTristate")},tristate:function(e){return e.filter(".aciTreeTristate")},extCheckbox:function(){return this._instance.options.checkbox},option:function(e,i){this.wasInit()&&!this.isLocked()&&"checkbox"==e&&i!=this.extCheckbox()&&(i?this._checkboxInit():this._checkboxDone()),this._super(e,i)},_checkboxDone:function(i){this._instance.jQuery.unbind(this._private.nameSpace),this._instance.jQuery.off(this._private.nameSpace,".aciTreeItem"),i||this.checkboxes(this.children(null,!0,!0)).each(this.proxy(function(i){this.removeCheckbox(e(i))},!0))},_destroyHook:function(e){e&&this._checkboxDone(!0),this._super(e)}};aciPluginClass.plugins.aciTree=aciPluginClass.plugins.aciTree.extend(h,"aciTreeCheckbox"),aciPluginClass.defaults("aciTree",c)}(jQuery);